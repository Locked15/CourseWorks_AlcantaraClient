//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AlcantaraClient.Entities
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    
    public partial class Order
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Order()
        {
            this.Baskets = new HashSet<Basket>();
        }
    
        public int ID { get; set; }
        public int IdEmployee { get; set; }
        public int IdUsers { get; set; }
        public System.DateTime OrderDate { get; set; }
        public decimal Sum { get; private set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Basket> Baskets { get; set; }
        public virtual Employee Employee { get; set; }
        public virtual User User { get; set; }

        /// <summary>
        /// Добавляет мебель в текущий заказ в соответствующую корзину.
        /// </summary>
        /// <param name="furniture">Мебель, которую нужно добавить к заказу.</param>
        /// <returns>
        /// Была ли добавлена мебель к соответствующей корзине (true)  <br />
        /// или была создана новая корзина (false).
        /// </returns>
        public Boolean AddFurnitureToOrder(Furniture furniture)
        {
            Boolean result;

            if (Baskets.FirstOrDefault(b => b.IdFurniture == furniture.ID) is var basket && basket != null)
            {
                ++basket.Quantity;

                result = true;
            }

            else
            {
                Baskets.Add(new Basket()
                {
                    IdFurniture = furniture.ID,
                    IdOrder = ID,
                    Order = this,
                    Quantity = 1
                });

                result = false;
            }

            Sum = Baskets.Sum(b => b.Quantity * CourseWorks_ThirdCourse_AlcantaraDbEntities.Instance.Furnitures.FirstOrDefault(f => f.ID == b.IdFurniture)?.Cost ?? 0M);
            return result;
        }

        /// <summary>
        /// Удаляет мебель из заказа (удаляя соответствующую корзину).
        /// </summary>
        /// <param name="furniture">Мебель, которую нужно удалить.</param>
        /// <returns>Успешность удаления.</returns>
        public Boolean RemoveFurnitureFromOrder(Furniture furniture)
        {
            Boolean result = Baskets.Remove(Baskets.Where(b => b.IdFurniture == furniture.ID).FirstOrDefault());
            Sum = Baskets.Sum(b => b.Quantity * CourseWorks_ThirdCourse_AlcantaraDbEntities.Instance.Furnitures.FirstOrDefault(f => f.ID == b.IdFurniture)?.Cost ?? 0M);

            return result;
        }

        /// <summary>
        /// Вызывает ручное обновление свойства "Sum".
        /// </summary>
        /// <returns>Было ли изменено свойство в процессе обновления.</returns>
        public Boolean UpdateSum()
        {
            Decimal temp = Sum;
            Sum = Baskets.Sum(b => b.Quantity * CourseWorks_ThirdCourse_AlcantaraDbEntities.Instance.Furnitures.FirstOrDefault(f => f.ID == b.IdFurniture)?.Cost ?? 0M);

            return temp != Sum;
        }
    }
}
